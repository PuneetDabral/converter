{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","Textform","useState","text","setText","style","color","heading","value","background","onChange","event","target","rows","disabled","length","newText","toLowerCase","showAlert","toUpperCase","document","getElementById","select","navigator","clipboard","writeText","split","join","filter","element","defaultProp","Alert","alert","role","word","lower","charAt","slice","captilize","msg","App","setMode","setalert","message","setTimeout","body","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6b619913.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n// import {Link} from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">about</Link>\r\n              </li> */}\r\n              \r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n            </form> */}\r\n            <div className={`form-check form-switch text-${props.mode===`light`?`dark`:`light`}`}>\r\n                  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\n// // check define proptype\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired\r\n};\r\n\r\n //defult prop\r\n Navbar.defaultProp ={\r\n    title:'set title here'\r\n\r\n }","import React ,{useState}from 'react'\r\n\r\nexport default function Textform(props) {\r\n    const handleUpClick = () =>{\r\n      //  console.log(\"upper click is fire\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"converted to Upper case!\", \"success\");\r\n    }\r\n\r\n    const handleloClick = () =>{\r\n      //  console.log(\"upper click is fire\" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"converted to Lower case!\", \"success\");\r\n    }\r\n\r\n    const handleclearClick = () =>{\r\n        setText('');\r\n        props.showAlert(\"Text is clear!\", \"success\");\r\n      \r\n    }\r\n\r\n    const handlecopyClick =() =>{\r\n      var text = document.getElementById('box')\r\n      text.select();\r\n      navigator.clipboard.writeText(text.value);\r\n      props.showAlert(\"copied to clipboard!\", \"success\");\r\n\r\n    }\r\n\r\n    const handleExtraSpaces = () =>{\r\n      let newText = text.split(/[ ]+/);\r\n      setText(newText.join(\" \"));\r\n      props.showAlert(\"remove extra spaces!\", \"success\");\r\n\r\n    }\r\n\r\n\r\n    const handleOnChange = (event) =>{\r\n      //  console.log(\"on chnage\");\r\n        setText(event.target.value)\r\n    }\r\n    \r\n    const [text, setText] = useState('');  // ('enter text')you can not use text to update taht variable \r\n    // setText(\"new text\");\r\n    return (\r\n      <>\r\n\r\n        <div className=\"container\" style={{color: props.mode===`dark`?`white`:`#042743` }}>\r\n\r\n                     <h1>{props.heading} </h1>\r\n                    <div className=\"mb-3\">\r\n                         \r\n                         <textarea className=\"form-control\"  value= {text} style={{background: props.mode===`dark`?`grey`:`white`, color:props.mode===`dark`?`white`:`#042743`}} onChange={handleOnChange} id=\"box\" rows=\"8\"></textarea>\r\n                   </div>\r\n                   <button disabled={text.length===0}  className=\"btn btn-primary mx-1 my-1\" onClick={handleloClick}>convert to lower case </button>                  \r\n                   <button disabled={text.length===0}  className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>convert to upper case </button>\r\n                   <button disabled={text.length===0}  className=\"btn btn-primary mx-1 my-1\" onClick={handlecopyClick}>copy text </button>\r\n                   <button disabled={text.length===0}  className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces}>remove space </button>\r\n                   <button disabled={text.length===0}  className=\"btn btn-danger mx-1 my-1\" onClick={handleclearClick}>clear text </button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color: props.mode===`dark`?`white`:`#042743` }}>\r\n          <h2>Your text summary</h2>\r\n           <p>{text.split (/\\s+/).filter((element)=>{  return element.length!==0}).length} words and {text.length} caracters</p>  {/*text.split gives the arrey like word */}\r\n          <p>{0.008*text.split (\" \").length} minute read</p>\r\n          <h2>Preview</h2>\r\n          <p>{text.length>0?text:\"nothing to privew!! \"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n    const captilize = (word) =>{\r\n         const lower = word.toLowerCase();\r\n         return lower.charAt(0).toUpperCase() + lower.slice(1);  \r\n    }\r\n  return (\r\n      \r\n      \r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n     <strong>{ captilize(props.alert.type)}</strong>: {props.alert.msg}\r\n     \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n \n// } from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode, setMode] = useState('light') ; //wheather drak mode is enable or not \n  const [alert, setalert] = useState(null);\n  const showAlert = (message, type)=>{\n     setalert({\n       msg: message,\n       type: type\n     })\n     setTimeout(() => {\n       setalert(null);\n     }, 1500);\n\n  }\n\n\n\n\n const toggleMode = ()=>{\n  if(mode === 'light'){\n  setMode('dark');\n  document.body.style.backgroundColor= '#042743';\n  showAlert(\"Dark mode has been enabled\", \"success\")\n  document.title = 'Converter - Dark mode';\n  // setInterval(() =>{\n  //   document.title = 'converter is Amazing mode';\n\n  // }, 2000);\n\n  // setInterval(() =>{\n  //   document.title = 'Converter is active now ';\n\n  // }, 1500);\n}\n\n  else{\n    setMode('light');\n    document.body.style.backgroundColor= 'white';\n    showAlert(\"Light mode has been enabled\", \"success\")\n    document.title = 'Converter - Light mode';\n  }\n}\n  return (\n    <>\n{/* <Router> */}\n<Navbar title=\"converter\" mode={mode} toggleMode={toggleMode} />\n<Alert alert={alert}/>\n<div className=\"container my-3\">  {/*it is a bootsrap class it takes it in center */}\n{/* <Switch> */}\n          {/* <Route exact path=\"/about\">\n            <About />\n          </Route> */}\n          \n          {/* <Route exact path=\"/\">     */}\n           {/* if you do not use exect react use partical matching  */}\n            <Textform showAlert={showAlert} heading=\"Enter the Text to analyze below\" mode={mode}/> \n          {/* </Route> */}\n {/* </Switch> */}\n \n\n</div>\n {/* </Router>   */}\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}